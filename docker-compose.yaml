services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    env_file:
      - .env.${ENV:-dev} # Используем .env.dev по умолчанию
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./mysql_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: mysqladmin ping -h localhost -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      interval: 5s
      timeout: 10s
      retries: 5

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql # Ссылка на сервис MySQL
      PMA_PORT: 3306
      PMA_ARBITRARY: 0
    ports:
      - "8080:80" # Порт для доступа к phpMyAdmin
    depends_on:
      mysql:
          condition: service_healthy
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      mysql:
          condition: service_healthy
      php:
        condition: service_started
    networks:
      - app-network

  php:
    build: .
    container_name: php
    volumes:
      - ./src:/var/www/html/src
      - ./public:/var/www/html/public
      - ./templates:/var/www/html/templates
    env_file:
      - .env.${ENV:-dev} # Используем .env.dev по умолчанию
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  php-migrations:
    build:
      context: ./migrations_config
    container_name: php-migrations
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  # loki:
  #   image: grafana/loki:latest
  #   container_name: loki
  #   ports:
  #     - "3100:3100"
  #   volumes:
  #     - ./loki-config.yaml:/etc/loki/local-config.yaml
  #   command: -config.file=/etc/loki/local-config.yaml
  #   networks:
  #     - app-network

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   ports:
  #     - "3000:3000"
  #   env_file:
  #     - .env.${ENV:-dev} # Используем .env.dev по умолчанию
  #   environment:
  #     GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   depends_on:
  #     - loki
  #   networks:
  #     - app-network

volumes:
  mysql_data:
  # grafana_data:

networks:
  app-network:
    driver: bridge